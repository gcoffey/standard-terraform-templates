resource "azurerm_container_registry" "{{ container_registry.name }}" {
  ## Required Vars
  name   = "{{ container_registry.name }}"
  resource_group_name   = "{{ container_registry.resource_group_name }}"
  location   = "{{ container_registry.location }}"
  sku   = "{{ container_registry.sku }}"

  ## Optional Vars
  admin_enabled   = {{ container_registry.admin_enabled }}
  policy_network_access_enabled   = {{ container_registry.policy_network_access_enabled }}
  quarantine_policy_enabled   = {{ container_registry.quarantine_policy_enabled }}
  zone_redundancy_enabled   = {{ container_registry.zone_redundancy_enabled }}
  export_policy_enabled   = {{ container_registry.export_policy_enabled }}
  anonymous_pull_enabled   = {{ container_registry.anonymous_pull_enabled }}
  data_endpoint_enabled   = {{ container_registry.data_endpoint_enabled }}
  network_rule_bypass_option   = "{{ container_registry.network_rule_bypass_option }}"
  tags   = "{{ container_registry.tags | to_json | safe }}"

  ## Blocks
  georeplications {
    ## Required Block Vars
    location   = "{{ container_registry.georeplications.location }}"
    ## Optional Block Vars
    regional_endpoint_enabled   = {{ container_registry.georeplications.regional_endpoint_enabled }}
    zone_redundancy_enabled   = {{ container_registry.georeplications.zone_redundancy_enabled }}
    tags   = "{{ container_registry.georeplications.tags | to_json | safe }}"
  }
  network_rule_set {
    ## Optional Block Vars
    default_action   = "{{ container_registry.network_rule_set.default_action }}"
    ip_rule {
      ## Required Block Vars
      action   = "{{ container_registry.network_rule_set.ip_rule.action }}"
 
      ip_range   = "{{ container_registry.network_rule_set.ip_rule.ip_range }}"
 
    }
    virtual_network {
      ## Required Block Vars
      action   = "{{ container_registry.network_rule_set.virtual_network.action }}"
 
      subnet_id   = "{{ container_registry.network_rule_set.virtual_network.subnet_id }}"
 
    }
  }
  trust_policy {
    ## Optional Block Vars
    enabled   = {{ container_registry.trust_policy.enabled }}
  }
  retention_policy {
    ## Optional Block Vars
    days   = "{{ container_registry.retention_policy.days }}"
    enabled   = {{ container_registry.retention_policy.enabled }}
  }
  identity {
    ## Required Block Vars
    type   = "{{ container_registry.identity.type }}"
    ## Optional Block Vars
    identity_ids   = "{{ container_registry.identity.identity_ids }}"
  }
  encryption {
    ## Required Block Vars
    key_vault_key_id   = "{{ container_registry.encryption.key_vault_key_id }}"
    identity_client_id   = "{{ container_registry.encryption.identity_client_id }}"
    ## Optional Block Vars
    enabled   = {{ container_registry.encryption.enabled }}
  }
}
