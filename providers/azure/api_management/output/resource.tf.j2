resource "azurerm_api_management" "{{ api_management.name }}" {
  ## Required Vars
  name   = "{{ api_management.name }}"
  location   = "{{ api_management.location }}"
  resource_group_name   = "{{ api_management.resource_group_name }}"
  publisher_name   = "{{ api_management.publisher_name }}"
  publisher_email   = "{{ api_management.publisher_email }}"
  sku_name   = "{{ api_management.sku_name }}"

  ## Optional Vars
  client_certificate_enabled   = {{ api_management.client_certificate_enabled }}
  gateway_disabled   = {{ api_management.gateway_disabled }}
  min_api_version   = "{{ api_management.min_api_version }}"
  zones   = "{{ api_management.zones | to_json | safe }}"
  notification_sender_email   = "{{ api_management.notification_sender_email }}"
  public_ip_address_id   = "{{ api_management.public_ip_address_id }}"

  ## Blocks
  additional_location {
    ## Required Block Vars
    location   = "{{ api_management.additional_location.location }}"
    ## Optional Block Vars
    capacity   = "{{ api_management.additional_location.capacity }}"
    zone   = "{{ api_management.additional_location.zone | to_json | safe }}"
    public_ip_address_id   = "{{ api_management.additional_location.public_ip_address_id }}"
    virtual_network_configuration {
    }
    gateway_disabled   = {{ api_management.additional_location.gateway_disabled }}
  }
  certificate {
    ## Required Block Vars
    encoded_certificate   = "{{ api_management.certificate.encoded_certificate }}"
    store_name   = "{{ api_management.certificate.store_name }}"
    ## Optional Block Vars
    certificate_password   = "{{ api_management.certificate.certificate_password }}"
  }
  delegation {
    ## Optional Block Vars
    subscriptions_enabled   = {{ api_management.delegation.subscriptions_enabled }}
    user_registration_enabled   = {{ api_management.delegation.user_registration_enabled }}
    url   = "{{ api_management.delegation.url }}"
    validation_key   = "{{ api_management.delegation.validation_key }}"
  }
  identity {
    ## Required Block Vars
    type   = "{{ api_management.identity.type }}"
    ## Optional Block Vars
    identity_ids   = "{{ api_management.identity.identity_ids | to_json | safe }}"
  }
  hostname_configuration {
    ## Optional Block Vars
    management {
      ## Required Block Vars
      host_name   = "{{ api_management.hostname_configuration.management.host_name }}"
 
      ## Optional Block Vars
      key_vault_id   = "{{ api_management.hostname_configuration.management.key_vault_id }}"
      certificate   = "{{ api_management.hostname_configuration.management.certificate }}"
      certificate_password   = "{{ api_management.hostname_configuration.management.certificate_password }}"
      negotiate_client_certificate   = {{ api_management.hostname_configuration.management.negotiate_client_certificate }}
      ssl_keyvault_identity_client_id   = "{{ api_management.hostname_configuration.management.ssl_keyvault_identity_client_id }}"
    }
    portal {
      ## Required Block Vars
      host_name   = "{{ api_management.hostname_configuration.portal.host_name }}"
 
      ## Optional Block Vars
      key_vault_id   = "{{ api_management.hostname_configuration.portal.key_vault_id }}"
      certificate   = "{{ api_management.hostname_configuration.portal.certificate }}"
      certificate_password   = "{{ api_management.hostname_configuration.portal.certificate_password }}"
      negotiate_client_certificate   = {{ api_management.hostname_configuration.portal.negotiate_client_certificate }}
      ssl_keyvault_identity_client_id   = "{{ api_management.hostname_configuration.portal.ssl_keyvault_identity_client_id }}"
    }
    developer_portal {
      ## Required Block Vars
      host_name   = "{{ api_management.hostname_configuration.developer_portal.host_name }}"
 
      ## Optional Block Vars
      key_vault_id   = "{{ api_management.hostname_configuration.developer_portal.key_vault_id }}"
      certificate   = "{{ api_management.hostname_configuration.developer_portal.certificate }}"
      certificate_password   = "{{ api_management.hostname_configuration.developer_portal.certificate_password }}"
      negotiate_client_certificate   = {{ api_management.hostname_configuration.developer_portal.negotiate_client_certificate }}
      ssl_keyvault_identity_client_id   = "{{ api_management.hostname_configuration.developer_portal.ssl_keyvault_identity_client_id }}"
    }
    proxy {
      ## Required Block Vars
      host_name   = "{{ api_management.hostname_configuration.proxy.host_name }}"
 
      ## Optional Block Vars
      default_ssl_binding   = {{ api_management.hostname_configuration.proxy.default_ssl_binding }}
      key_vault_id   = "{{ api_management.hostname_configuration.proxy.key_vault_id }}"
      certificate   = "{{ api_management.hostname_configuration.proxy.certificate }}"
      certificate_password   = "{{ api_management.hostname_configuration.proxy.certificate_password }}"
      negotiate_client_certificate   = {{ api_management.hostname_configuration.proxy.negotiate_client_certificate }}
      ssl_keyvault_identity_client_id   = "{{ api_management.hostname_configuration.proxy.ssl_keyvault_identity_client_id }}"
    }
    scm {
      ## Required Block Vars
      host_name   = "{{ api_management.hostname_configuration.scm.host_name }}"
 
      ## Optional Block Vars
      key_vault_id   = "{{ api_management.hostname_configuration.scm.key_vault_id }}"
      certificate   = "{{ api_management.hostname_configuration.scm.certificate }}"
      certificate_password   = "{{ api_management.hostname_configuration.scm.certificate_password }}"
      negotiate_client_certificate   = {{ api_management.hostname_configuration.scm.negotiate_client_certificate }}
      ssl_keyvault_identity_client_id   = "{{ api_management.hostname_configuration.scm.ssl_keyvault_identity_client_id }}"
    }
  }
  policy {
    ## Optional Block Vars
    xml_content   = "{{ api_management.policy.xml_content }}"
    xml_link   = "{{ api_management.policy.xml_link }}"
  }
  protocols {
    ## Optional Block Vars
    enable_http2   = {{ api_management.protocols.enable_http2 }}
  }
  security {
    ## Optional Block Vars
    enable_backend_ssl30   = {{ api_management.security.enable_backend_ssl30 }}
    enable_backend_tls10   = {{ api_management.security.enable_backend_tls10 }}
    enable_backend_tls11   = {{ api_management.security.enable_backend_tls11 }}
    enable_frontend_ssl30   = {{ api_management.security.enable_frontend_ssl30 }}
    enable_frontend_tls10   = {{ api_management.security.enable_frontend_tls10 }}
    tls_ecdhe_ecdsa_with_aes128_cbc_sha_ciphers_enabled   = {{ api_management.security.tls_ecdhe_ecdsa_with_aes128_cbc_sha_ciphers_enabled }}
    tls_ecdhe_ecdsa_with_aes256_cbc_sha_ciphers_enabled   = {{ api_management.security.tls_ecdhe_ecdsa_with_aes256_cbc_sha_ciphers_enabled }}
    tls_ecdhe_rsa_with_aes128_cbc_sha_ciphers_enabled   = {{ api_management.security.tls_ecdhe_rsa_with_aes128_cbc_sha_ciphers_enabled }}
    tls_ecdhe_rsa_with_aes256_cbc_sha_ciphers_enabled   = {{ api_management.security.tls_ecdhe_rsa_with_aes256_cbc_sha_ciphers_enabled }}
    tls_rsa_with_aes128_cbc_sha256_ciphers_enabled   = {{ api_management.security.tls_rsa_with_aes128_cbc_sha256_ciphers_enabled }}
    tls_rsa_with_aes128_cbc_sha_ciphers_enabled   = {{ api_management.security.tls_rsa_with_aes128_cbc_sha_ciphers_enabled }}
    tls_rsa_with_aes128_gcm_sha256_ciphers_enabled   = {{ api_management.security.tls_rsa_with_aes128_gcm_sha256_ciphers_enabled }}
    tls_rsa_with_aes256_gcm_sha384_ciphers_enabled   = {{ api_management.security.tls_rsa_with_aes256_gcm_sha384_ciphers_enabled }}
    tls_rsa_with_aes256_cbc_sha256_ciphers_enabled   = {{ api_management.security.tls_rsa_with_aes256_cbc_sha256_ciphers_enabled }}
    tls_rsa_with_aes256_cbc_sha_ciphers_enabled   = {{ api_management.security.tls_rsa_with_aes256_cbc_sha_ciphers_enabled }}
    triple_des_ciphers_enabled   = {{ api_management.security.triple_des_ciphers_enabled }}
  }
  sign_in {
    ## Required Block Vars
    enabled   = {{ api_management.sign_in.enabled }}
  }
  sign_up {
    ## Required Block Vars
    enabled   = {{ api_management.sign_up.enabled }}
    terms_of_service {
      ## Required Block Vars
      consent_required   = {{ api_management.sign_up.terms_of_service.consent_required }}
      enabled   = {{ api_management.sign_up.terms_of_service.enabled }}
      ## Optional Block Vars
      text   = "{{ api_management.sign_up.terms_of_service.text }}"
    }
  }
  tenant_access {
    ## Required Block Vars
    enabled   = {{ api_management.tenant_access.enabled }}
  }
  virtual_network_configuration {
    ## Required Block Vars
    subnet_id   = "{{ api_management.virtual_network_configuration.subnet_id }}"
  }
}
