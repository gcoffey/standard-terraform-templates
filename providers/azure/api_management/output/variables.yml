api_management:
  name: "<string>"	# Required; A name for this resource
  name: "<string>"       # Required; The name of the API Management Service
  location: "<string>"       # Required; The Azure location where the API Management Service exists
  resource_group_name: "<string>"       # Required; The name of the resource group where the API Management Service is created
  publisher_name: "<string>"       # Required; The name of the publisher / company
  publisher_email: "<string>"       # Required; The email of the publisher / company
  sku_name: "<string>"       # Required; The sku name <type>_<capacity> e.g. Developer_1; Consumption, Developer, Basic, Standard, Premium
  client_certificate_enabled: <boolean>        # Optional; Enforce clients to present a client certificate
  gateway_disabled: <boolean>        # Optional; Disabled the gateway in the main region
  min_api_version: "<string>"       # Optional; The minimum accepted API version
  zones:  # Optional; A list of availability zones
    - <list>
  notification_sender_email: "<string>"       # Optional; Email address the notification appears FROM
  public_ip_address_id: "<string>"       # Optional; ID of a standard SKU IPv4 Public IP
  additional_location:
    location: "<string>"       # Required; Azure Region to expand the API Management Service into
    capacity: "<string>"       # Optional; Number of compute units in this region
    zone:  # Optional; List of availability zones
      - <list>
    public_ip_address_id: "<string>"       # Optional; ID of a standard SKU IPv4 Public IP
    virtual_network_configuration:
    gateway_disabled: <boolean>        # Optional; Disable the gateway in this location
  certificate:
    encoded_certificate: "<string>"       # Required; The Base64 Encoded PFX or Base64 Encoded X.509 Certificate
    store_name: "<string>"       # Required; The name of the Certificate Store where this certificate should be stored; CertificateAuthority or Root
    certificate_password: "<string>"       # Optional; The password for the certificate
  delegation:
    subscriptions_enabled: <boolean>        # Optional; Delegate subscription requests to an external url; Default false
    user_registration_enabled: <boolean>        # Optional; Should user registration requests be delegated to an external url; Default false
    url: "<string>"       # Optional; Delegation URL
    validation_key: "<string>"       # Optional; A base64-encoded validation key to vaidate the request originates from Azure API Management
  identity:
    type: "<string>"       # Required; Specifies the type of Managed Serviec Identity to use with API Management Service; SystemAssigned or UserAssigned
    identity_ids:  # Optional; A list of User Assigned Managed Identity IDs
      - <list>
  hostname_configuration:
    management:
      host_name: "<string>"       # Required; The Hostname to use for the Management API 
      key_vault_id: "<string>"       # Optional; The ID of the Key Vault Secret containing the SSL Certificate
      certificate: "<string>"       # Optional; The Base64 Encoded Certificate
      certificate_password: "<string>"       # Optional; The password associatd with the certificate
      negotiate_client_certificate: <boolean>        # Optional; Should Client Certificate Negotiation be enabled
      ssl_keyvault_identity_client_id: "<string>"       # Optional; System or User Assigned Managed IDentity clientId
    portal:
      host_name: "<string>"       # Required; The Hostname to use for the Management API 
      key_vault_id: "<string>"       # Optional; The ID of the Key Vault Secret containing the SSL Certificate
      certificate: "<string>"       # Optional; The Base64 Encoded Certificate
      certificate_password: "<string>"       # Optional; The password associatd with the certificate
      negotiate_client_certificate: <boolean>        # Optional; Should Client Certificate Negotiation be enabled
      ssl_keyvault_identity_client_id: "<string>"       # Optional; System or User Assigned Managed IDentity clientId
    developer_portal:
      host_name: "<string>"       # Required; The Hostname to use for the Management API 
      key_vault_id: "<string>"       # Optional; The ID of the Key Vault Secret containing the SSL Certificate
      certificate: "<string>"       # Optional; The Base64 Encoded Certificate
      certificate_password: "<string>"       # Optional; The password associatd with the certificate
      negotiate_client_certificate: <boolean>        # Optional; Should Client Certificate Negotiation be enabled
      ssl_keyvault_identity_client_id: "<string>"       # Optional; System or User Assigned Managed IDentity clientId
    proxy:
      host_name: "<string>"       # Required; The Hostname to use for the Management API 
      default_ssl_binding: <boolean>        # Optional; Is the certificate associated with this Hostname the Default SSL Certificate; Default false
      key_vault_id: "<string>"       # Optional; The ID of the Key Vault Secret containing the SSL Certificate
      certificate: "<string>"       # Optional; The Base64 Encoded Certificate
      certificate_password: "<string>"       # Optional; The password associatd with the certificate
      negotiate_client_certificate: <boolean>        # Optional; Should Client Certificate Negotiation be enabled
      ssl_keyvault_identity_client_id: "<string>"       # Optional; System or User Assigned Managed IDentity clientId
    scm:
      host_name: "<string>"       # Required; The Hostname to use for the Management API 
      key_vault_id: "<string>"       # Optional; The ID of the Key Vault Secret containing the SSL Certificate
      certificate: "<string>"       # Optional; The Base64 Encoded Certificate
      certificate_password: "<string>"       # Optional; The password associatd with the certificate
      negotiate_client_certificate: <boolean>        # Optional; Should Client Certificate Negotiation be enabled
      ssl_keyvault_identity_client_id: "<string>"       # Optional; System or User Assigned Managed IDentity clientId
  policy:
    xml_content: "<string>"       # Optional; The XML Content for this Policy
    xml_link: "<string>"       # Optional; A link to an API Management Policy XML Document
  protocols:
    enable_http2: <boolean>        # Optional; Should HTTP/2 be support by the API Management Service; Default false
  security:
    enable_backend_ssl30: <boolean>        # Optional; Enable SSL 3.0 on the backend; Default false
    enable_backend_tls10: <boolean>        # Optional; Enable TLS 1.0 on the backend; Default false
    enable_backend_tls11: <boolean>        # Optional; Enable TLS 1.1 on the backend; Default false
    enable_frontend_ssl30: <boolean>        # Optional; Enable SSL 3.0 on the frontend; Default false
    enable_frontend_tls10: <boolean>        # Optional; Enable TLS 1.0 on the frontend; Default false
    tls_ecdhe_ecdsa_with_aes128_cbc_sha_ciphers_enabled: <boolean>        # Optional; Enable cipher tls_ecdhe_ecdsa_with_aes128_cbc_sha_ciphers; Default false
    tls_ecdhe_ecdsa_with_aes256_cbc_sha_ciphers_enabled: <boolean>        # Optional; Enable cipher tls_ecdhe_ecdsa_with_aes256_cbc_sha_ciphers; Default false
    tls_ecdhe_rsa_with_aes128_cbc_sha_ciphers_enabled: <boolean>        # Optional; Enable cipher tls_ecdhe_rsa_with_aes128_cbc_sha_ciphers; Default false
    tls_ecdhe_rsa_with_aes256_cbc_sha_ciphers_enabled: <boolean>        # Optional; Enable cipher tls_ecdhe_rsa_with_aes256_cbc_sha_ciphers; Default false
    tls_rsa_with_aes128_cbc_sha256_ciphers_enabled: <boolean>        # Optional; Enable cipher tls_rsa_with_aes128_cbc_sha256_ciphers; Default false
    tls_rsa_with_aes128_cbc_sha_ciphers_enabled: <boolean>        # Optional; Enable cipher tls_rsa_with_aes128_cbc_sha_ciphers; Default false
    tls_rsa_with_aes128_gcm_sha256_ciphers_enabled: <boolean>        # Optional; Enable cipher tls_rsa_with_aes128_gcm_sha256_ciphers; Default false
    tls_rsa_with_aes256_gcm_sha384_ciphers_enabled: <boolean>        # Optional; Enable cipher tls_rsa_with_aes256_gcm_sha384_ciphers; Default false
    tls_rsa_with_aes256_cbc_sha256_ciphers_enabled: <boolean>        # Optional; Enable cipher tls_rsa_with_aes256_cbc_sha256_ciphers; Default false
    tls_rsa_with_aes256_cbc_sha_ciphers_enabled: <boolean>        # Optional; Enable cipher tls_rsa_with_aes256_cbc_sha_ciphers; Default false
    triple_des_ciphers_enabled: <boolean>        # Optional; Enable cipher triple_des_ciphers_enabled; Default false
  sign_in:
    enabled: <boolean>        # Required; Should anonymous users be redirected to the sign in page
  sign_up:
    enabled: <boolean>        # Required; Can users sign up on the development portal
    terms_of_service:
 
      consent_required: <boolean>        # Required; Should the user be asked for consent during sign up      enabled: <boolean>        # Required; Should the TOS be displayed during sign up      text: "<string>"       # Optional; The Terms of Service which users are required to agree
  tenant_access:
    enabled: <boolean>        # Required; Should access to the management API be enabled
  virtual_network_configuration:
    subnet_id: "<string>"       # Required; The id of the subnet that will be used for the API Management
