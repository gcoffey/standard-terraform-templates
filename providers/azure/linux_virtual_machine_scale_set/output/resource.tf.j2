resource "azurerm_linux_virtual_machine_scale_set" "{{ linux_virtual_machine_scale_set.name }}" {
  ## Required Vars
  name   = "{{ linux_virtual_machine_scale_set.name }}"
  location   = "{{ linux_virtual_machine_scale_set.location }}"
  resource_group_name   = "{{ linux_virtual_machine_scale_set.resource_group_name }}"
  admin_username   = "{{ linux_virtual_machine_scale_set.admin_username }}"
  instances   = "{{ linux_virtual_machine_scale_set.instances }}"
  sku   = "{{ linux_virtual_machine_scale_set.sku }}"

  ## Optional Vars
  admin_password   = "{{ linux_virtual_machine_scale_set.admin_password }}"
  capacity_reservation_group_id   = "{{ linux_virtual_machine_scale_set.capacity_reservation_group_id }}"
  computer_name_prefix   = "{{ linux_virtual_machine_scale_set.computer_name_prefix }}"
  custom_data   = "{{ linux_virtual_machine_scale_set.custom_data }}"
  disable_password_authentication   = {{ linux_virtual_machine_scale_set.disable_password_authentication }}
  do_not_run_extensions_on_overprovisioned_machines   = {{ linux_virtual_machine_scale_set.do_not_run_extensions_on_overprovisioned_machines }}
  edge_zone   = "{{ linux_virtual_machine_scale_set.edge_zone }}"
  encryption_at_host_enabled   = {{ linux_virtual_machine_scale_set.encryption_at_host_enabled }}
  extension_operations_enabled   = {{ linux_virtual_machine_scale_set.extension_operations_enabled }}
  extensions_time_budget   = "{{ linux_virtual_machine_scale_set.extensions_time_budget }}"
  eviction_policy   = "{{ linux_virtual_machine_scale_set.eviction_policy }}"
  gallery_application   = "{{ linux_virtual_machine_scale_set.gallery_application }}"
  health_probe_id   = "{{ linux_virtual_machine_scale_set.health_probe_id }}"
  host_group_id   = "{{ linux_virtual_machine_scale_set.host_group_id }}"
  max_bid_price   = "{{ linux_virtual_machine_scale_set.max_bid_price }}"
  overprovision   = {{ linux_virtual_machine_scale_set.overprovision }}
  platform_fault_domain_count   = "{{ linux_virtual_machine_scale_set.platform_fault_domain_count }}"
  priority   = "{{ linux_virtual_machine_scale_set.priority }}"
  provision_vm_agent   = {{ linux_virtual_machine_scale_set.provision_vm_agent }}
  proximity_placement_group_id   = "{{ linux_virtual_machine_scale_set.proximity_placement_group_id }}"
  scale_in   = "{{ linux_virtual_machine_scale_set.scale_in }}"
  secure_boot_enabled   = {{ linux_virtual_machine_scale_set.secure_boot_enabled }}
  single_placement_group   = {{ linux_virtual_machine_scale_set.single_placement_group }}
  source_image_id   = "{{ linux_virtual_machine_scale_set.source_image_id }}"
  tags   = "{{ linux_virtual_machine_scale_set.tags | to_json | safe }}"
  upgrade_mode   = "{{ linux_virtual_machine_scale_set.upgrade_mode }}"
  user_data   = "{{ linux_virtual_machine_scale_set.user_data }}"
  vtpm_enabled   = {{ linux_virtual_machine_scale_set.vtpm_enabled }}
  zone_balance   = "{{ linux_virtual_machine_scale_set.zone_balance }}"
  zones   = "{{ linux_virtual_machine_scale_set.zones }}"

  ## Blocks
  additional_capabilities {
    ## Optional Block Vars
    ultra_ssd_enabled   = {{ linux_virtual_machine_scale_set.additional_capabilities.ultra_ssd_enabled }}
  }
  admin_ssh_key {
    ## Required Block Vars
    public_key   = "{{ linux_virtual_machine_scale_set.admin_ssh_key.public_key }}"
    username   = "{{ linux_virtual_machine_scale_set.admin_ssh_key.username }}"
  }
  automatic_os_upgrade_policy {
    ## Required Block Vars
    disable_automatic_rollback   = {{ linux_virtual_machine_scale_set.automatic_os_upgrade_policy.disable_automatic_rollback }}
    enable_automatic_os_upgrade   = "{{ linux_virtual_machine_scale_set.automatic_os_upgrade_policy.enable_automatic_os_upgrade }}"
  }
  automatic_instance_repair {
    ## Required Block Vars
    enabled   = {{ linux_virtual_machine_scale_set.automatic_instance_repair.enabled }}
    ## Optional Block Vars
    grace_period   = "{{ linux_virtual_machine_scale_set.automatic_instance_repair.grace_period }}"
  }
  boot_diagnostics {
    ## Optional Block Vars
    storage_account_uri   = "{{ linux_virtual_machine_scale_set.boot_diagnostics.storage_account_uri }}"
  }
  data_disk {
    ## Required Block Vars
    name   = "{{ linux_virtual_machine_scale_set.data_disk.name }}"
    caching   = "{{ linux_virtual_machine_scale_set.data_disk.caching }}"
    disk_size_gb   = "{{ linux_virtual_machine_scale_set.data_disk.disk_size_gb }}"
    lun   = "{{ linux_virtual_machine_scale_set.data_disk.lun }}"
    storage_account_type   = "{{ linux_virtual_machine_scale_set.data_disk.storage_account_type }}"
    ## Optional Block Vars
    create_option   = "{{ linux_virtual_machine_scale_set.data_disk.create_option }}"
    disk_encryption_set_id   = "{{ linux_virtual_machine_scale_set.data_disk.disk_encryption_set_id }}"
    ultra_ssd_disk_iops_read_write   = "{{ linux_virtual_machine_scale_set.data_disk.ultra_ssd_disk_iops_read_write }}"
    ultra_ssd_disk_mbps_read_write   = "{{ linux_virtual_machine_scale_set.data_disk.ultra_ssd_disk_mbps_read_write }}"
    write_accelerator_enabled   = {{ linux_virtual_machine_scale_set.data_disk.write_accelerator_enabled }}
  }
  extension {
    ## Required Block Vars
    name   = "{{ linux_virtual_machine_scale_set.extension.name }}"
    publisher   = "{{ linux_virtual_machine_scale_set.extension.publisher }}"
    type   = "{{ linux_virtual_machine_scale_set.extension.type }}"
    type_handler_version   = "{{ linux_virtual_machine_scale_set.extension.type_handler_version }}"
    ## Optional Block Vars
    auto_upgrade_minor_version   = {{ linux_virtual_machine_scale_set.extension.auto_upgrade_minor_version }}
    automatic_upgrade_enabled   = {{ linux_virtual_machine_scale_set.extension.automatic_upgrade_enabled }}
    force_update_tag   = "{{ linux_virtual_machine_scale_set.extension.force_update_tag }}"
    protected_settings   = "{{ linux_virtual_machine_scale_set.extension.protected_settings }}"
    protected_settings_from_key_vault {
      ## Required Block Vars
      secret_url   = "{{ linux_virtual_machine_scale_set.extension.protected_settings_from_key_vault.secret_url }}"
 
      source_vault_id   = "{{ linux_virtual_machine_scale_set.extension.protected_settings_from_key_vault.source_vault_id }}"
 
    }
    provision_after_extensions   = "{{ linux_virtual_machine_scale_set.extension.provision_after_extensions }}"
    settings   = "{{ linux_virtual_machine_scale_set.extension.settings }}"
  }
  gallery_application {
    ## Required Block Vars
    version_id   = "{{ linux_virtual_machine_scale_set.gallery_application.version_id }}"
    ## Optional Block Vars
    configuration_blob_uri   = "{{ linux_virtual_machine_scale_set.gallery_application.configuration_blob_uri }}"
    order   = "{{ linux_virtual_machine_scale_set.gallery_application.order }}"
    tag   = "{{ linux_virtual_machine_scale_set.gallery_application.tag }}"
  }
  identity {
    ## Required Block Vars
    type   = "{{ linux_virtual_machine_scale_set.identity.type }}"
    ## Optional Block Vars
    identity_ids   = "{{ linux_virtual_machine_scale_set.identity.identity_ids }}"
  }
  network_interface {
    ## Required Block Vars
    name   = "{{ linux_virtual_machine_scale_set.network_interface.name }}"
    ip_configuration {
      ## Required Block Vars
      name   = "{{ linux_virtual_machine_scale_set.network_interface.ip_configuration.name }}"
      ## Optional Block Vars
      application_gateway_backend_address_pool_ids   = "{{ linux_virtual_machine_scale_set.network_interface.ip_configuration.application_gateway_backend_address_pool_ids }}"
      application_security_group_ids   = "{{ linux_virtual_machine_scale_set.network_interface.ip_configuration.application_security_group_ids }}"
      load_balancer_backend_address_pool_ids   = "{{ linux_virtual_machine_scale_set.network_interface.ip_configuration.load_balancer_backend_address_pool_ids }}"
      load_balancer_inbound_nat_rules_ids   = "{{ linux_virtual_machine_scale_set.network_interface.ip_configuration.load_balancer_inbound_nat_rules_ids }}"
      primary   = {{ linux_virtual_machine_scale_set.network_interface.ip_configuration.primary }}
      subnet_id   = "{{ linux_virtual_machine_scale_set.network_interface.ip_configuration.subnet_id }}"
      version   = "{{ linux_virtual_machine_scale_set.network_interface.ip_configuration.version }}"
    }
    ## Optional Block Vars
    dns_servers   = "{{ linux_virtual_machine_scale_set.network_interface.dns_servers }}"
    enable_accelerated_networking   = {{ linux_virtual_machine_scale_set.network_interface.enable_accelerated_networking }}
    enable_ip_forwarding   = {{ linux_virtual_machine_scale_set.network_interface.enable_ip_forwarding }}
    network_security_group_id   = "{{ linux_virtual_machine_scale_set.network_interface.network_security_group_id }}"
    primary   = "{{ linux_virtual_machine_scale_set.network_interface.primary }}"
  }
  os_disk {
    ## Required Block Vars
    caching   = "{{ linux_virtual_machine_scale_set.os_disk.caching }}"
    storage_account_type   = "{{ linux_virtual_machine_scale_set.os_disk.storage_account_type }}"
    ## Optional Block Vars
    diff_disk_settings {
      ## Required Block Vars
      option   = "{{ linux_virtual_machine_scale_set.os_disk.diff_disk_settings.option }}"
 
      ## Optional Block Vars
      placement   = "{{ linux_virtual_machine_scale_set.os_disk.diff_disk_settings.placement }}"
    }
    disk_encryption_set_id   = "{{ linux_virtual_machine_scale_set.os_disk.disk_encryption_set_id }}"
    disk_size_gb   = "{{ linux_virtual_machine_scale_set.os_disk.disk_size_gb }}"
    secure_vm_disk_encryption_set_id   = "{{ linux_virtual_machine_scale_set.os_disk.secure_vm_disk_encryption_set_id }}"
    security_encryption_type   = "{{ linux_virtual_machine_scale_set.os_disk.security_encryption_type }}"
    write_accelerator_enabled   = {{ linux_virtual_machine_scale_set.os_disk.write_accelerator_enabled }}
  }
  plan {
    ## Required Block Vars
    name   = "{{ linux_virtual_machine_scale_set.plan.name }}"
    publisher   = "{{ linux_virtual_machine_scale_set.plan.publisher }}"
    product   = "{{ linux_virtual_machine_scale_set.plan.product }}"
  }
  scale_in {
    ## Optional Block Vars
    rule   = "{{ linux_virtual_machine_scale_set.scale_in.rule }}"
    force_deletion_enabled   = {{ linux_virtual_machine_scale_set.scale_in.force_deletion_enabled }}
  }
  rolling_upgrade_policy {
    ## Required Block Vars
    max_batch_instance_percent   = "{{ linux_virtual_machine_scale_set.rolling_upgrade_policy.max_batch_instance_percent }}"
    max_unhealthy_instance_percent   = "{{ linux_virtual_machine_scale_set.rolling_upgrade_policy.max_unhealthy_instance_percent }}"
    max_unhealthy_upgraded_instance_percent   = "{{ linux_virtual_machine_scale_set.rolling_upgrade_policy.max_unhealthy_upgraded_instance_percent }}"
    pause_time_between_batches   = "{{ linux_virtual_machine_scale_set.rolling_upgrade_policy.pause_time_between_batches }}"
    ## Optional Block Vars
    cross_zone_upgrades_enabled   = {{ linux_virtual_machine_scale_set.rolling_upgrade_policy.cross_zone_upgrades_enabled }}
    prioritize_unhealth_instances_enabled   = {{ linux_virtual_machine_scale_set.rolling_upgrade_policy.prioritize_unhealth_instances_enabled }}
  }
  secret {
    ## Required Block Vars
    certificate {
      ## Required Block Vars
      url   = "{{ linux_virtual_machine_scale_set.secret.certificate.url }}"
    }
    key_vault_id   = "{{ linux_virtual_machine_scale_set.secret.key_vault_id }}"
  }
  terminate_notification {
    ## Required Block Vars
    enabled   = {{ linux_virtual_machine_scale_set.terminate_notification.enabled }}
    ## Optional Block Vars
    timeout   = "{{ linux_virtual_machine_scale_set.terminate_notification.timeout }}"
  }
  termination_notification {
    ## Required Block Vars
    enabled   = {{ linux_virtual_machine_scale_set.termination_notification.enabled }}
    ## Optional Block Vars
    timeout   = "{{ linux_virtual_machine_scale_set.termination_notification.timeout }}"
  }
  source_image_reference {
    ## Required Block Vars
    publisher   = "{{ linux_virtual_machine_scale_set.source_image_reference.publisher }}"
    offer   = "{{ linux_virtual_machine_scale_set.source_image_reference.offer }}"
    sku   = "{{ linux_virtual_machine_scale_set.source_image_reference.sku }}"
    version   = "{{ linux_virtual_machine_scale_set.source_image_reference.version }}"
  }
  spot_restore {
    ## Optional Block Vars
    enabled   = {{ linux_virtual_machine_scale_set.spot_restore.enabled }}
    timeout   = "{{ linux_virtual_machine_scale_set.spot_restore.timeout }}"
  }
}
