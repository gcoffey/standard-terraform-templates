resource "aws_db_instance" "{{ db_instance.name }}" {
  ## Required Vars
  allocated_storage   = "{{ db_instance.allocated_storage }}"
  engine   = "{{ db_instance.engine }}"
  instance_class   = "{{ db_instance.instance_class }}"
  password   = "{{ db_instance.password }}"
  username   = "{{ db_instance.username }}"

  ## Optional Vars
  allow_major_version_upgrade   = {{ db_instance.allow_major_version_upgrade }}
  apply_immediately   = {{ db_instance.apply_immediately }}
  auto_minor_version_upgrade   = {{ db_instance.auto_minor_version_upgrade }}
  availability_zone   = "{{ db_instance.availability_zone }}"
  backup_retention_period   = "{{ db_instance.backup_retention_period }}"
  backup_window   = "{{ db_instance.backup_window }}"
  ca_cert_identifier   = "{{ db_instance.ca_cert_identifier }}"
  character_set_name   = "{{ db_instance.character_set_name }}"
  copy_tags_to_snapshot   = {{ db_instance.copy_tags_to_snapshot }}
  custom_iam_instance_profile   = "{{ db_instance.custom_iam_instance_profile }}"
  db_name   = "{{ db_instance.db_name }}"
  db_subnet_group_name   = "{{ db_instance.db_subnet_group_name }}"
  delete_automated_backups   = {{ db_instance.delete_automated_backups }}
  deletion_protection   = {{ db_instance.deletion_protection }}
  domain   = "{{ db_instance.domain }}"
  domain_iam_role_name   = "{{ db_instance.domain_iam_role_name }}"
  enabled_cloudwatch_logs_exports   = "{{ db_instance.enabled_cloudwatch_logs_exports }}"
  engine_version   = "{{ db_instance.engine_version }}"
  final_snapshot_identifier   = "{{ db_instance.final_snapshot_identifier }}"
  iam_database_authentication_enabled   = {{ db_instance.iam_database_authentication_enabled }}
  identifier   = "{{ db_instance.identifier }}"
  identifier_prefix   = "{{ db_instance.identifier_prefix }}"
  iops   = "{{ db_instance.iops }}"
  kms_key_id   = "{{ db_instance.kms_key_id }}"
  license_model   = "{{ db_instance.license_model }}"
  maintenance_window   = "{{ db_instance.maintenance_window }}"
  max_allocated_storage   = "{{ db_instance.max_allocated_storage }}"
  monitoring_interval   = "{{ db_instance.monitoring_interval }}"
  monitoring_role_arn   = "{{ db_instance.monitoring_role_arn }}"
  multi_az   = "{{ db_instance.multi_az }}"
  nchar_character_set_name   = "{{ db_instance.nchar_character_set_name }}"
  network_type   = "{{ db_instance.network_type }}"
  option_group_name   = "{{ db_instance.option_group_name }}"
  parameter_group_name   = "{{ db_instance.parameter_group_name }}"
  performance_insights_enabled   = {{ db_instance.performance_insights_enabled }}
  performance_insights_kms_key_id   = "{{ db_instance.performance_insights_kms_key_id }}"
  performance_insights_retention_period   = "{{ db_instance.performance_insights_retention_period }}"
  port   = "{{ db_instance.port }}"
  publicly_accessible   = {{ db_instance.publicly_accessible }}
  replica_mode   = "{{ db_instance.replica_mode }}"
  replicate_source_db   = "{{ db_instance.replicate_source_db }}"
  skip_final_snapshot   = {{ db_instance.skip_final_snapshot }}
  snapshot_identifier   = "{{ db_instance.snapshot_identifier }}"
  storage_encrypted   = {{ db_instance.storage_encrypted }}
  storage_type   = "{{ db_instance.storage_type }}"
  storage_throughput   = "{{ db_instance.storage_throughput }}"
  timezone   = "{{ db_instance.timezone }}"
  vpc_security_group_ids   = "{{ db_instance.vpc_security_group_ids | to_json | safe }}"
  customer_owned_ip_enabled   = {{ db_instance.customer_owned_ip_enabled }}
  tags   = "{{ db_instance.tags | to_json | safe }}"

  ## Blocks
  restore_to_point_in_time {
    ## Optional Block Vars
    restore_time   = "{{ db_instance.restore_to_point_in_time.restore_time }}"
    source_db_instance_identifier   = "{{ db_instance.restore_to_point_in_time.source_db_instance_identifier }}"
    source_db_instance_automated_backups_arn   = "{{ db_instance.restore_to_point_in_time.source_db_instance_automated_backups_arn }}"
    source_dbi_resource_id   = "{{ db_instance.restore_to_point_in_time.source_dbi_resource_id }}"
    use_latest_restorable_time   = {{ db_instance.restore_to_point_in_time.use_latest_restorable_time }}
  }
  s3_import {
    ## Required Block Vars
    bucket_name   = "{{ db_instance.s3_import.bucket_name }}"
    ingestion_role   = "{{ db_instance.s3_import.ingestion_role }}"
    source_engine   = "{{ db_instance.s3_import.source_engine }}"
    source_engine_version   = "{{ db_instance.s3_import.source_engine_version }}"
    ## Optional Block Vars
    bucket_prefix   = "{{ db_instance.s3_import.bucket_prefix }}"
  }
  blue_green_update {
    ## Optional Block Vars
    enabled   = {{ db_instance.blue_green_update.enabled }}
  }
}
